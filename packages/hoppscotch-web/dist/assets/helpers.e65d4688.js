import{f,h as c,al as g,am as q,o as C,d as v,a3 as _,p as r,dX as u,dY as i,dZ as b,cU as I,d_ as D,d$ as w,dM as a,e0 as y,e1 as k,e2 as B,e3 as E,aS as d,e4 as h,e5 as p,e6 as G,dK as S}from"./index.86d7e4bf.js";const K=f({__name:"Intersection",emits:["intersecting"],setup(s,{emit:e}){const t=c(),n=c();return g(()=>{t.value=new IntersectionObserver(([o])=>{o&&o.isIntersecting&&e("intersecting",o)}),t.value.observe(n.value)}),q(()=>{t.value.disconnect()}),(o,l)=>(C(),v("div",{ref_key:"container",ref:n},[_(o.$slots,"default")],512))}}),m=10,L=async s=>{const e=[];for(;;){const t=await a({query:E,variables:{collectionID:s,cursor:e.length>0?e[e.length-1]:void 0}});if(d(t))return h(t.left);if(e.push(...t.right.collection.children.map(n=>n.id)),t.right.collection.children.length!==m)break}return p(e)},T=async s=>{const e=[];for(;;){const t=await a({query:G,variables:{collectionID:s,cursor:e.length>0?e[e.length-1].id:void 0}});if(d(t))return h(t.left);if(e.push(...t.right.requestsInCollection.map(n=>({id:n.id,request:S(JSON.parse(n.request)),collectionID:s,title:n.title}))),t.right.requestsInCollection.length!==m)break}return p(e)},A=s=>r(k,i("title",()=>r(()=>a({query:y,variables:{collectionID:s}}),u(e=>e.collection.title))),i("children",()=>r(()=>L(s),b(I(w(A),D)))),i("requests",()=>()=>T(s)),u(({title:e,children:t,requests:n})=>({id:s,children:t,requests:n,title:e}))),R=s=>{var e,t,n,o;return B({name:s.title,folders:(t=(e=s.children)==null?void 0:e.map(R))!=null?t:[],requests:(o=(n=s.requests)==null?void 0:n.map(l=>l.request))!=null?o:[]})};export{m as B,K as _,A as g,R as t};
//# sourceMappingURL=helpers.e65d4688.js.map
