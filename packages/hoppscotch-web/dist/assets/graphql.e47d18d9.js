import{aZ as m,h as u,et as x,j as Q,cr as q,W as P,ct as _,eu as R,ev as D,Y as $,ew as E,ex as G,p as I,ey as L,ez as g,eA as j}from"./index.86d7e4bf.js";const Y=N=>{var d,k;const v=[],e=m(N),l=u(!0),i=u(!0),y=u();e.updateSubs||(e.updateSubs=[]);const r=u((d=e.defer)!=null?d:!1),b=u((k=e.pollDuration)!=null?k:null),o=u(x(e.query,Q(e.variables))),n=u(),p=u(!0);v.push(q(a=>{if(b.value!==null&&!r.value){const c=setInterval(()=>{p.value=!p.value},b.value);a(()=>{clearInterval(c)})}})),v.push(q(()=>{const a=x(e.query,Q(e.variables));o.value.key!==a.key&&(o.value=a)},{flush:"pre"}));const h=()=>{n.value=r.value?void 0:D.value.executeQuery(o.value,{requestPolicy:"network-only"})};v.push(P(p,()=>{h()},{flush:"pre"})),_(a=>{if(n.value){l.value=!0,i.value=!1;const c=e.updateSubs.map(s=>R(D.value.executeSubscription(s),E(()=>{n.value&&f()}),G(()=>f())).unsubscribe);c.push(R(n.value,E(()=>{l.value=!1,i.value=!1}),G(s=>{var w,S;s.operation.key===o.value.key&&(y.value=I(s.data,L(I((w=s.error)==null?void 0:w.networkError,L((S=s.error)==null?void 0:S.message),g(t=>({type:"gql_error",error:j(t!=null?t:"")}),t=>({type:"network_error",error:t}))))),l.value=!1)})).unsubscribe),a(()=>c.forEach(s=>s()))}});const f=a=>{a&&($(e.variables)?e.variables.value=a:e.variables=a),r.value=!1,h()};return m({loading:l,data:y,pause:()=>{r.value=!0},unpause:()=>{r.value=!1},isStale:i,execute:f})};export{Y as u};
//# sourceMappingURL=graphql.e47d18d9.js.map
